{"version":3,"sources":["logo.svg","components/features/header/Header.js","redux/actions/types.js","components/features/addButton/AddButton.js","components/features/removeButton/RemoveButton.js","components/features/buttons/Buttons.js","components/features/toggleTheme/ToggleTheme.js","components/features/navbar/Navbar.js","components/service/service.js","components/utills/Index.js","components/features/search/Search.js","components/features/forecastsCard/ForecastsCard.js","components/features/footer/Footer.js","components/pages/Weather.js","components/features/favoriteCard/FavoriteCard.js","components/pages/Favorites.js","components/features/toggleUnit/ToggleUnit.js","components/features/link/Link.js","components/features/sidebar/Sidebar.js","components/features/appRouter/AppRouter.js","components/features/container/Container.js","App.js","reportWebVitals.js","redux/reducers/favoriteReducer.js","redux/reducers/cityReducer.js","redux/reducers/forecastsReducer.js","redux/reducers/toggleReducer.js","redux/reducers/Index.js","index.js"],"names":["Header","favoriteCity","useState","setFavorite","useEffect","favoriteCities","JSON","parse","localStorage","getItem","filter","city","Key","length","getFavoriteCities","className","LocalizedName","CHANGE_THEME","CHANGE_UNIT","CHANGE_CITY","UPDATE_FORCASTS","DEFAULT_FORCASTS","ADD_FAVORITE","DELETE_FAVORITE","AddButton","useSelector","state","cityReducer","dispatch","useDispatch","IconButton","onClick","type","payload","color","fontSize","RemoveButton","Buttons","Stack","direction","spacing","ToggleTheme","theme","setTheme","Button","console","log","Navbar","to","getCityWeather","fetch","process","then","res","json","getDailyForecasts","checkWindowWidth","windowWidth","Search","chosenCity","setChosenCity","weatherHandler","a","cities","toast","cityListHandler","newCity","DailyForecasts","searchInputHandler","e","value","target","replace","RegExp","isValidValue","onChange","ForecastsCard","forecast","unit","toggleReducer","toggleTemp","Temperature","Maximum","Minimum","IconPhrase","Day","currentDay","currentTime","Date","toLocaleString","weekday","slice","variants","transition","duration","delay","visible","opacity","y","hidden","convertFerToCel","fer","Math","floor","motion","div","Card","component","whileHover","scale","whileTap","CardContent","Typography","gutterBottom","variant","initial","animate","svg","style","Value","class","xmlns","viewBox","preserveAspectRatio","d","fill","Footer","href","Weather","forecastsReducer","getForecasts","forecasts","ForecastsCardVariant","x","map","key","showForecasts","FavoriteCard","navigate","useNavigate","temp","setTemp","changeForecasts","pathname","getWeather","weather","ApparentTemperature","Imperial","Metric","fontFamily","textAlign","CardActions","size","Favorites","favoriteReducer","favorites","setFavorites","GetFavorites","useMemo","mapFavoritesCities","forEach","currentWeather","ToggleUnit","toggleTheme","ToggleButtonGroup","ToggleButton","marginRight","Link","text","ListItem","button","ListItemIcon","ListItemText","primary","Sidebar","anchor","left","setState","toggleDrawer","open","event","sidebarsLinks","zIndex","SwipeableDrawer","onClose","onOpen","Box","sx","width","role","onKeyDown","List","link","Divider","AppRouter","window","innerWidth","setWindowWidth","addEventListener","path","exact","element","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","find","obj","filterdCities","WeatherText","mapForecasts","defualtForecasts","toggle","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dae1c5cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\r\nimport '../../styles/style.css';\r\n\r\nexport const Header = ({ favoriteCity }) => {\r\n\r\n    const [favorite, setFavorite] = useState('');\r\n    const getFavoriteCities = () => {\r\n        let favoriteCities = JSON.parse(localStorage.getItem(\"favoriteCities\"));\r\n        if (favoriteCities) {\r\n            favoriteCities = favoriteCities.filter((city) => city.Key === favoriteCity.Key);\r\n            if (favoriteCities.length !== 0) {\r\n                setFavorite('Favorite city');\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => getFavoriteCities(), [favoriteCity]);\r\n\r\n    return (\r\n        <div className=\"text-container\">\r\n            <h1 className=\"header\">{favoriteCity.LocalizedName || \"Favorite cities\"}</h1>\r\n        </div>\r\n    )\r\n}\r\n","// Toggle\r\nexport const CHANGE_THEME = \"CHANGE_THEME\";\r\nexport const CHANGE_UNIT = \"CHANGE_UNIT\";\r\n\r\n// city\r\nexport const CHANGE_CITY = \"CHANGE_CITY\";\r\nexport const UPDATE_CITY = \"UPDATE_CITY\";\r\nexport const CHANGE_TEMP = \"CHANGE_TEMP\";\r\n\r\n// forecasts\r\nexport const UPDATE_FORCASTS = \"UPDATE_FORCASTS\";\r\nexport const DEFAULT_FORCASTS = \"DEFAULT_FORCASTS\";\r\n\r\n\r\n// favorite \r\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\r\nexport const DELETE_FAVORITE = \"DELETE_FAVORITE\";\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport '../../styles/style.css';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_FAVORITE } from '../../../redux/actions/types';\r\n\r\nexport const AddButton = () => {\r\n    const favoriteCity = useSelector(state => state.cityReducer);\r\n    const dispatch = useDispatch();\r\n    const addFavoriteCity = () => {\r\n        dispatch({ type: ADD_FAVORITE, payload: favoriteCity })\r\n    }\r\n    return (\r\n        <div>\r\n            <IconButton onClick={() => addFavoriteCity()} color=\"primary\" aria-label=\"add to shopping cart\">\r\n                <FavoriteIcon fontSize=\"large\" />\r\n            </IconButton>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React from 'react'\r\nimport '../../styles/style.css';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DELETE_FAVORITE } from '../../../redux/actions/types';\r\n\r\nexport const RemoveButton = () => {\r\n    const favoriteCity = useSelector(state => state.cityReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteFavoriteCity = () => {\r\n        dispatch({ type: DELETE_FAVORITE, payload: favoriteCity.Key })\r\n    }\r\n\r\n    return (\r\n        <IconButton onClick={() => deleteFavoriteCity()} color=\"primary\" aria-label=\"add to shopping cart\">\r\n            <DeleteIcon fontSize='large' />\r\n        </IconButton>\r\n    );\r\n}\r\n","import React, { useState, } from 'react';\r\nimport { Stack } from '@mui/material';\r\nimport { AddButton } from '../addButton/AddButton';\r\nimport { RemoveButton } from '../removeButton/RemoveButton';\r\nexport const Buttons = () => {\r\n    return (\r\n        <div className=\"button-container\">\r\n            <Stack direction=\"row\" spacing={1}>\r\n                <AddButton />\r\n                <RemoveButton />\r\n            </Stack>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button } from '@mui/material';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport { CHANGE_THEME, CHANGE_UNIT } from '../../../redux/actions/types';\r\n\r\nexport const ToggleTheme = () => {\r\n    const dispatch = useDispatch();\r\n    const [theme, setTheme] = useState(true);\r\n\r\n    const handleChange = () => {\r\n        setTheme(!theme);\r\n        dispatch({ type: CHANGE_THEME, payload: theme });\r\n        console.log(\"clicked\")\r\n    };\r\n\r\n    return (\r\n        <Button onClick={handleChange} >Change theme</Button>\r\n    );\r\n\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport '../../styles/style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Header } from '../header/Header';\r\nimport { useSelector } from 'react-redux';\r\nimport { Buttons } from \"../buttons/Buttons\";\r\nimport { ToggleTheme } from '../toggleTheme/ToggleTheme';\r\nexport const Navbar = () => {\r\n    const favoriteCity = useSelector(state => state.cityReducer);\r\n\r\n    return (\r\n        <nav className=\"navbar-container\">\r\n            <Header favoriteCity={favoriteCity} />\r\n            <ToggleTheme />\r\n            <ul className=\"navbar-ul\">\r\n\r\n                <li className=\"navbar-li\">\r\n                    <Link className=\"navbar-link\" to=\"/weather-app\"> Weather </Link>\r\n                </li>\r\n                <li className=\"navbar-li\">\r\n                    <Link className=\"navbar-link\" to=\"/weather-app/favorites\"> Favorites </Link>\r\n                </li>\r\n            </ul>\r\n            <Buttons />\r\n\r\n        </nav>\r\n    )\r\n}\r\n","\r\nexport const getCityList = (city) => {\r\n    return fetch(`https://dataservice.accuweather.com//locations/v1/cities/autocomplete?apikey=${process.env.REACT_APP_API_KEY}&q=${city}&language=en-us HTTP/1.1`)\r\n        .then(res => res.json())\r\n}\r\n\r\nexport const getCityWeather = ({ Key }) => {\r\n    return fetch(`https://dataservice.accuweather.com/currentconditions/v1/${Key}?apikey=${process.env.REACT_APP_API_KEY}&language=en-us&details=true`)\r\n        .then(res => res.json())\r\n\r\n}\r\n\r\nexport const getDailyForecasts = (Key) => {\r\n    return fetch(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${Key}?apikey=${process.env.REACT_APP_API_KEY}`)\r\n        .then(res => res.json())\r\n}\r\n\r\nexport const getCoordinates = (Key) => {\r\n    return fetch(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${Key}?apikey=${process.env.REACT_APP_API_KEY}`)\r\n        .then(res => res.json())\r\n        .then(res => console.log(res))\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const getEvents = () => {\r\n    return fetch(\"https://app.ticketmaster.com/discovery/v2/events.json?size=7&keyword=Ed&apikey=9Fe3TiZMSanrQ1TnmPuhrc7bW0q6if13\")\r\n        .then(res => res.json())\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const getEventByAttraction = (keyword) => {\r\n    return fetch(`https://app.ticketmaster.com/discovery/v2/attractions?apikey=9Fe3TiZMSanrQ1TnmPuhrc7bW0q6if13&keyword=${keyword}&locale=*&size=6&preferredCountry=us`)\r\n        .then(attraction => attraction.json())\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const getUserEvent = (keyword) => {\r\n    return fetch(`https://app.ticketmaster.com/discovery/v2/attractions?apikey=9Fe3TiZMSanrQ1TnmPuhrc7bW0q6if13&keyword=${keyword}&locale=*&size=6&preferredCountry=us`)\r\n        .then(attraction => attraction.json())\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\n\r\n\r\n","\r\nexport const checkWindowWidth = (windowWidth) => {\r\n    const result = windowWidth < 550;\r\n    return result;\r\n}\r\n\r\nexport const isValidValue = (e) => {\r\n    let value = e.target.value;\r\n    return value.replace(RegExp(/[^A-Z a-z]/gi), \"\");\r\n\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport '../../styles/style.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { CHANGE_CITY, UPDATE_FORCASTS } from '../../../redux/actions/types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCityList, getDailyForecasts } from '../../service/service';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { isValidValue } from '../../utills/Index';\r\n\r\nexport const Search = () => {\r\n    const [chosenCity, setChosenCity] = useState();\r\n    const dispatch = useDispatch();\r\n\r\n    const weatherHandler = async () => {\r\n        let cities;\r\n        try {\r\n            cities = await getCityList(chosenCity);\r\n        } catch (e) {\r\n            toast(`Cant get ${chosenCity} forecasts, pick another city`);\r\n        }\r\n        try {\r\n            const newCity = await cityListHandler(cities);\r\n            const { DailyForecasts } = await getDailyForecasts(newCity.Key);\r\n            dispatch({ type: UPDATE_FORCASTS, payload: DailyForecasts })\r\n        } catch (e) {\r\n            toast(`Can't get ${chosenCity} forecasts`)\r\n        }\r\n    }\r\n\r\n    const cityListHandler = (cities) => {\r\n        dispatch({ type: CHANGE_CITY, payload: cities[0] });\r\n        return cities[0];\r\n    }\r\n\r\n    const searchInputHandler = (e) => {\r\n        const value = isValidValue(e);\r\n        setChosenCity(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <div className=\"search-bar\">\r\n                <input className=\"search-input\" value={chosenCity} onChange={e => searchInputHandler(e)} type=\"text\" />\r\n                <input className=\"search-button\" type=\"submit\" onClick={() => weatherHandler()} value=\"search\" />\r\n            </div>\r\n\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../../styles/style.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { motion } from \"framer-motion\";\r\nimport WbSunnyIcon from '@mui/icons-material/WbSunny';\r\nimport NightlightIcon from '@mui/icons-material/Nightlight';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const ForecastsCard = ({ forecast }) => {\r\n    const unit = useSelector(state => state.toggleReducer.toggleTemp);\r\n    const { Maximum, Minimum } = forecast.Temperature;\r\n    const { IconPhrase } = forecast.Day;\r\n    let { currentDay } = forecast;\r\n    let currentTime = new Date().toLocaleString().replace(',', '');\r\n    currentDay = new Date(currentDay).toLocaleString('en-us', { weekday: 'long' });\r\n    currentTime = currentTime.slice(currentTime.length - 2);\r\n\r\n\r\n    const variants = {\r\n        transition: { duration: 7, delay: 1.5 },\r\n        visible: { opacity: 1, y: \"0px\" },\r\n        hidden: { opacity: 0, y: \"40vh\" },\r\n    }\r\n\r\n    const isDayOrNight = () => {\r\n        return currentTime === \"AM\" ? <WbSunnyIcon variants={variants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            component={motion.svg} style={{ color: \"yellow\", fontSize: \"3rem\" }} className={`weather-icon-${currentTime}`}\r\n        /> : <NightlightIcon variants={variants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            component={motion.svg} style={{ color: \"black\", fontSize: \"3rem\" }} className={`weather-icon-${currentTime}`}\r\n        />\r\n    }\r\n\r\n    const convertFerToCel = (fer) => {\r\n        return Math.floor((fer - 32) * 5 / 9);\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            className=\"ForecastsCard-container\">\r\n            <Card component={motion.div}\r\n                whileHover={{\r\n                    scale: 1.2,\r\n                    transition: { duration: 0.3 }\r\n                }}\r\n                whileTap={{ scale: 0.9 }}\r\n                className=\"ForecastsCard\" >\r\n                <CardContent className=\"card-content\">\r\n                    <Typography gutterBottom variant=\"h3\" component=\"div\">\r\n                        {currentDay}\r\n                        {isDayOrNight()}\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                        {IconPhrase}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" color=\"text.secondary\">\r\n                        Min:{unit === \"Imperial\" ? convertFerToCel(Minimum.Value) : Minimum.Value}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" color=\"text.secondary\">\r\n                        Max:{unit === \"Imperial\" ? convertFerToCel(Maximum.Value) : Maximum.Value}\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n                <div class=\"custom-shape-divider-bottom-1637765530\">\r\n                    <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\r\n                        <path\r\n                            d=\"M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z\"\r\n                            style={{ fill: currentTime === \"AM\" ? \"#9af2ff\" : \"#2f2b3c\" }}>\r\n\r\n                        </path>\r\n                    </svg>\r\n                </div>\r\n            </Card>\r\n\r\n        </motion.div >\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"../../styles/style.css\";\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"Footer-container\">\r\n            <div className=\"social-links\">\r\n                <div className=\"olympic-info\">\r\n                    <ul>\r\n                        <li><a href=\"https://www.linkedin.com/in/lior-solomon-246254206/\"><i class=\"fab fa-linkedin\"></i></a></li>\r\n                        <li><a href=\"https://github.com/Lior3796\"><i class=\"fab fa-github\"></i></a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport '../styles/style.css';\r\nimport { getDailyForecasts } from '../service/service';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DEFAULT_FORCASTS } from '../../redux/actions/types';\r\nimport { Search } from '../features/search/Search';\r\nimport { ForecastsCard } from '../features/forecastsCard/ForecastsCard';\r\nimport { motion } from \"framer-motion\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Footer } from \"../features/footer/Footer\";\r\n\r\nexport const Weather = () => {\r\n    const { Key } = useSelector(state => state.cityReducer);\r\n    const { forecastsReducer } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const getForecasts = async () => {\r\n        try {\r\n            const forecasts = await getDailyForecasts(Key);\r\n            dispatch({ type: DEFAULT_FORCASTS, payload: forecasts })\r\n        } catch (e) {\r\n            toast(\"cant update forecasts\");\r\n        }\r\n    }\r\n    const ForecastsCardVariant = {\r\n        transition: { duration: 5, delay: 1.5 },\r\n        visible: { x: \"0vw\" },\r\n        hidden: { x: \"-100vw\" },\r\n    }\r\n\r\n    const showForecasts = (forecastsReducer) => {\r\n        console.log(forecastsReducer)\r\n        return forecastsReducer?.map((city, key) =>\r\n            <ForecastsCard\r\n                component={motion.div}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                variants={ForecastsCardVariant} key={key} forecast={city} />)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getForecasts();\r\n    }, [Key])\r\n\r\n    return (\r\n        <div className=\"weather-container\">\r\n            <Search />\r\n            <div className=\"forecasts-map-container-weather\">\r\n                {showForecasts(forecastsReducer)}\r\n                <ToastContainer />\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../../styles/style.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UPDATE_FORCASTS, CHANGE_CITY } from '../../../redux/actions/types';\r\nimport { getDailyForecasts, getCityWeather } from '../../service/service';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const FavoriteCard = ({ city }) => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [temp, setTemp] = useState();\r\n    const unit = useSelector(state => state.toggleReducer.toggleTemp);\r\n\r\n\r\n    const changeForecasts = async () => {\r\n        try {\r\n            const { DailyForecasts } = await getDailyForecasts(city.Key);\r\n            dispatch({ type: UPDATE_FORCASTS, payload: DailyForecasts });\r\n            dispatch({ type: CHANGE_CITY, payload: city });\r\n            navigate({ pathname: \"/weather-app\" })\r\n        } catch (e) {\r\n            toast(\"city not found\")\r\n        }\r\n    }\r\n\r\n    const getWeather = async () => {\r\n        try {\r\n            const weather = await getCityWeather(city);\r\n            const { Imperial, Metric } = weather[0].ApparentTemperature;\r\n            setTemp({ Imperial, Metric });\r\n        } catch (e) {\r\n            toast(\"can't get weather for this city\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getWeather();\r\n    }, [])\r\n    return (\r\n        <Card className=\"favoriteCard\">\r\n            <CardContent>\r\n                <Typography color=\"text.primary\">\r\n                    <Typography style={{ fontFamily: \"Assistant\", textAlign: \"center\" }} gutterBottom variant=\"h3\" component=\"div\">\r\n                        {city.LocalizedName}\r\n                    </Typography>\r\n                </Typography>\r\n                <Typography style={{ fontFamily: \"Assistant\", textAlign: \"center\" }} gutterBottom variant=\"div\" component=\"h3\">\r\n                    <Typography style={{ fontFamily: \"Assistant\", textAlign: \"center\" }} gutterBottom variant=\"h3\" component=\"div\">\r\n                        {unit}\r\n                    </Typography>\r\n                    <Typography style={{ fontFamily: \"Assistant\", textAlign: \"center\" }} gutterBottom variant=\"h3\" component=\"small\">\r\n                        {unit === \"Imperial\" ? temp?.Imperial?.Value : temp?.Metric?.Value}\r\n                    </Typography>\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button onClick={() => changeForecasts()} size=\"large\">Click here </Button>\r\n            </CardActions>\r\n            <ToastContainer />\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\nimport '../styles/style.css'\r\nimport { useSelector } from 'react-redux';\r\nimport { FavoriteCard } from '../features/favoriteCard/FavoriteCard';\r\nimport { getCityWeather } from '../service/service';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Footer } from \"../features/footer/Footer\";\r\n\r\n\r\nexport const Favorites = () => {\r\n    const cities = useSelector(state => state.favoriteReducer);\r\n    const [favorites, setFavorites] = useState([{}]);\r\n\r\n    useEffect(() => {\r\n        GetFavorites();\r\n    }, [])\r\n\r\n    const CheckMemoFavorites = () => {\r\n        useMemo(() => { mapFavoritesCities(cities) }, [cities.length]);\r\n    }\r\n    const GetFavorites = () => {\r\n        try {\r\n            if (!cities.length) return;\r\n            CheckMemoFavorites();\r\n\r\n        } catch (e) {\r\n            console.log(\"error\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const mapFavoritesCities = (favoriteCities) => favoriteCities.forEach(async (city) => {\r\n        try {\r\n            const currentWeather = await getCityWeather(city);\r\n            setFavorites([...favorites, currentWeather]);\r\n        } catch (e) {\r\n            toast('Cant get favorite cities')\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"favorite-container\">\r\n            <h1 className=\"header\">Here is your favorite weather:</h1>\r\n\r\n            <div className=\"forecasts-map-container-favorite\">\r\n                {\r\n                    cities?.map((city, key) => <FavoriteCard currentWeather={favorites} city={city} key={key} />)\r\n                }\r\n            </div>\r\n            <ToastContainer />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport { CHANGE_UNIT } from '../../../redux/actions/types';\r\nexport const ToggleUnit = () => {\r\n    const dispatch = useDispatch();\r\n    const [temp, setTemp] = useState(true);\r\n    const { toggleTheme } = useSelector(state => state.toggleReducer)\r\n    const changeUnit = () => {\r\n        setTemp(!temp);\r\n        dispatch({ type: CHANGE_UNIT, payload: temp })\r\n    };\r\n    return (\r\n        <ToggleButtonGroup\r\n            onClick={() => changeUnit()}\r\n            className={`toggle-container-${toggleTheme}`}\r\n        >\r\n            <ToggleButton style={{ fontFamily: \"Assistant\", fontSize: \"1.2rem\", marginRight: \"5px\" }} color=\"secondary\" size=\"medium\">Change Unit</ToggleButton>\r\n        </ToggleButtonGroup>\r\n    );\r\n\r\n\r\n}\r\n","import React from 'react'\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const Link = ({ pathname, text }) => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <ListItem button onClick={() => navigate({ pathname })}>\r\n            <ListItemIcon>\r\n                <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={text}></ListItemText>\r\n        </ListItem>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { ToggleUnit } from '../toggleUnit/ToggleUnit';\r\nimport { Link } from '../link/Link';\r\nimport { Typography } from '@mui/material';\r\nimport { ToggleTheme } from '../toggleTheme/ToggleTheme';\r\nimport { AddButton } from '../addButton/AddButton';\r\nimport { RemoveButton } from '../removeButton/RemoveButton';\r\nimport { Header } from '../header/Header';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport default function Sidebar() {\r\n    const favoriteCity = useSelector(state => state.cityReducer)\r\n    const [state, setState] = useState({\r\n        left: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        setState({ [anchor]: open });\r\n    };\r\n\r\n    const sidebarsLinks = [\r\n        { pathname: \"/weather-app/favorites\", text: \"favorite\" },\r\n        { pathname: \"/weather-app\", text: \"weather\" },\r\n    ]\r\n\r\n    const list = (anchor) => (\r\n        <Box\r\n            sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 200 }}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n\r\n            <List >\r\n                {sidebarsLinks.map((link, key) => <Link key={key} pathname={link.pathname} text={link.text} />)}\r\n                <ToggleTheme />\r\n                <ToggleUnit />\r\n                <AddButton />\r\n                <RemoveButton />\r\n            </List>\r\n            <Header favoriteCity={favoriteCity} />\r\n\r\n            <Divider />\r\n\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Button style={{ zIndex: 10 }} onClick={toggleDrawer('left', true)}><MenuIcon /></Button>\r\n            <SwipeableDrawer\r\n                anchor='left'\r\n                open={state['left']}\r\n                onClose={toggleDrawer('left', false)}\r\n                onOpen={toggleDrawer('left', true)}\r\n            >\r\n                {list('left')}\r\n            </SwipeableDrawer>\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navbar } from '../navbar/Navbar';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes, Route,\r\n\r\n} from \"react-router-dom\";\r\nimport { Weather } from '../../pages/Weather';\r\nimport { Favorites } from '../../pages/Favorites';\r\nimport '../../styles/style.css';\r\nimport Sidebar from '../sidebar/Sidebar';\r\nimport { Header } from '../header/Header';\r\nimport { checkWindowWidth } from '../../utills/Index';\r\n\r\n\r\nexport const AppRouter = () => {\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    const favoriteCity = useSelector(state => state.cityReducer);\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", () => setWindowWidth(window.innerWidth));\r\n    }, [])\r\n    return (\r\n        <Router>\r\n            <>\r\n                <div className={checkWindowWidth(windowWidth) && \"layout-container\"} >\r\n                    {checkWindowWidth(windowWidth) ? <Sidebar /> : <Navbar />}\r\n\r\n                </div>\r\n                <Routes>\r\n                    <Route path=\"/\" exact element={<Weather />} />\r\n                    <Route path=\"/Weather-app\" exact element={<Weather />} />\r\n                    <Route path=\"/Weather-app/favorites\" exact element={<Favorites />} />\r\n\r\n                </Routes>\r\n            </>\r\n        </Router >\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport '../../styles/style.css';\r\nimport { AppRouter } from '../appRouter/AppRouter';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nexport const Container = () => {\r\n    const theme = useSelector(state => state.toggleReducer.toggleTheme);\r\n\r\n    return (\r\n        <div className={theme}>\r\n            <AppRouter />\r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\r\nimport './components/styles/style.css';\r\nimport { Container } from './components/features/container/Container';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ADD_FAVORITE, DELETE_FAVORITE } from \"../actions/types\";\r\n\r\nconst favoriteReducer = (favoriteCities = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_FAVORITE:\r\n            if (!(favoriteCities.length) || !(favoriteCities.find(obj => obj.Key === action.payload.Key))) {\r\n                return [...favoriteCities, action.payload];\r\n            }\r\n            return favoriteCities;\r\n\r\n        case DELETE_FAVORITE:\r\n            const filterdCities = favoriteCities.filter(city => city.Key !== action.payload);\r\n            return filterdCities;\r\n\r\n        default:\r\n            return favoriteCities;\r\n    }\r\n};\r\n\r\nexport default favoriteReducer;","import { CHANGE_CITY } from \"../actions/types\";\r\n\r\nconst cityReducer = (state = { LocalizedName: \"Tel Aviv\", Key: process.env.REACT_APP_DEFUALT_CITY, WeatherText: 'Mostly cloudy' }, action) => {\r\n\r\n    switch (action.type) {\r\n        case CHANGE_CITY:\r\n            console.log(state);\r\n            const { LocalizedName, Key, WeatherText } = action.payload;\r\n            return { LocalizedName, Key, WeatherText };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cityReducer;","import { UPDATE_FORCASTS, DEFAULT_FORCASTS } from \"../actions/types\";\r\n\r\nconst forecastsReducer = (forecasts = [], action) => {\r\n    switch (action.type) {\r\n        case UPDATE_FORCASTS:\r\n            const mapForecasts = action.payload.map(({ Temperature, Date, Day }) => { return { Temperature, currentDay: Date, Day } });\r\n            return mapForecasts;\r\n        case DEFAULT_FORCASTS:\r\n            const defualtForecasts = action.payload.DailyForecasts.map(({ Temperature, Date, Day }) => { return { Temperature, currentDay: Date, Day } });\r\n            return defualtForecasts;\r\n        default:\r\n            return forecasts;\r\n    }\r\n};\r\n\r\nexport default forecastsReducer;","import { CHANGE_THEME, CHANGE_UNIT } from \"../actions/types\";\r\n\r\nconst toggleReducer = (toggle = { toggleTheme: 'light', toggleTemp: 'Metric' }, action) => {\r\n\r\n  switch (action.type) {\r\n    case CHANGE_THEME:\r\n\r\n      if (action.payload) {\r\n        return { ...toggle, toggleTheme: 'dark' };\r\n      }\r\n      return { ...toggle, toggleTheme: 'light' };\r\n    case CHANGE_UNIT:\r\n      if (action.payload) {\r\n        return { ...toggle, toggleTemp: \"Imperial\" };\r\n      }\r\n      return { ...toggle, toggleTemp: \"Metric\" };\r\n\r\n    default:\r\n      return toggle;\r\n  }\r\n};\r\n\r\nexport default toggleReducer;","import { combineReducers } from \"redux\";\r\nimport favoriteReducer from \"./favoriteReducer\";\r\nimport cityReducer from \"./cityReducer\";\r\nimport forecastsReducer from \"./forecastsReducer\";\r\nimport toggleReducer from \"./toggleReducer\";\r\nexport default combineReducers({\r\n  toggleReducer,\r\n  favoriteReducer,\r\n  cityReducer,\r\n  forecastsReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './redux/reducers/Index';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}